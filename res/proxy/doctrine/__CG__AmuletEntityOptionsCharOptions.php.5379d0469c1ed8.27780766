<?php

namespace DoctrineProxies\__CG__\Amulet\Entity\Options;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CharOptions extends \Amulet\Entity\Options\CharOptions implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'life', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'max_life', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'energy', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'max_energy', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'level', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'experience', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'need_experience', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'is_ghost', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'location', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_action', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'timers', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'journal', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'town_location', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_life_regen_time', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_energy_regen_time');
        }

        return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'life', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'max_life', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'energy', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'max_energy', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'level', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'experience', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'need_experience', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'is_ghost', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'location', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_action', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'timers', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'journal', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'town_location', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_life_regen_time', '' . "\0" . 'Amulet\\Entity\\Options\\CharOptions' . "\0" . 'last_energy_regen_time');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CharOptions $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLife($life)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLife', array($life));

        return parent::setLife($life);
    }

    /**
     * {@inheritDoc}
     */
    public function getLife()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLife', array());

        return parent::getLife();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxLife($maxLife)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxLife', array($maxLife));

        return parent::setMaxLife($maxLife);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxLife()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxLife', array());

        return parent::getMaxLife();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnergy($energy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnergy', array($energy));

        return parent::setEnergy($energy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnergy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnergy', array());

        return parent::getEnergy();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxEnergy($maxEnergy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxEnergy', array($maxEnergy));

        return parent::setMaxEnergy($maxEnergy);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxEnergy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxEnergy', array());

        return parent::getMaxEnergy();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', array($level));

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience($experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', array($experience));

        return parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', array());

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setNeedExperience($needExperience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNeedExperience', array($needExperience));

        return parent::setNeedExperience($needExperience);
    }

    /**
     * {@inheritDoc}
     */
    public function getNeedExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNeedExperience', array());

        return parent::getNeedExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGhost($isGhost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGhost', array($isGhost));

        return parent::setIsGhost($isGhost);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsGhost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsGhost', array());

        return parent::getIsGhost();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastAction($lastAction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastAction', array($lastAction));

        return parent::setLastAction($lastAction);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastAction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastAction', array());

        return parent::getLastAction();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimers($timers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimers', array($timers));

        return parent::setTimers($timers);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimers', array());

        return parent::getTimers();
    }

    /**
     * {@inheritDoc}
     */
    public function setJournal($journal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJournal', array($journal));

        return parent::setJournal($journal);
    }

    /**
     * {@inheritDoc}
     */
    public function getJournal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJournal', array());

        return parent::getJournal();
    }

    /**
     * {@inheritDoc}
     */
    public function setTownLocation($townLocation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTownLocation', array($townLocation));

        return parent::setTownLocation($townLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getTownLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTownLocation', array());

        return parent::getTownLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLifeRegenTime($lastLifeRegenTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLifeRegenTime', array($lastLifeRegenTime));

        return parent::setLastLifeRegenTime($lastLifeRegenTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLifeRegenTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLifeRegenTime', array());

        return parent::getLastLifeRegenTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEnergyRegenTime($lastEnergyRegenTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEnergyRegenTime', array($lastEnergyRegenTime));

        return parent::setLastEnergyRegenTime($lastEnergyRegenTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEnergyRegenTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEnergyRegenTime', array());

        return parent::getLastEnergyRegenTime();
    }

}
