<?php

namespace DoctrineProxies\__CG__\Amulet\Entity\Options;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BaseStats extends \Amulet\Entity\Options\BaseStats implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'strenge', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'dexterity', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'agility', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'will', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'health', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'hit_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'mana_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'rage_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'energy_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'intellegence');
        }

        return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'strenge', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'dexterity', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'agility', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'will', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'health', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'hit_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'mana_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'rage_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'energy_points', '' . "\0" . 'Amulet\\Entity\\Options\\BaseStats' . "\0" . 'intellegence');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BaseStats $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStrenge($strenge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStrenge', array($strenge));

        return parent::setStrenge($strenge);
    }

    /**
     * {@inheritDoc}
     */
    public function getStrenge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStrenge', array());

        return parent::getStrenge();
    }

    /**
     * {@inheritDoc}
     */
    public function setDexterity($dexterity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDexterity', array($dexterity));

        return parent::setDexterity($dexterity);
    }

    /**
     * {@inheritDoc}
     */
    public function getDexterity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDexterity', array());

        return parent::getDexterity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgility($agility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgility', array($agility));

        return parent::setAgility($agility);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgility', array());

        return parent::getAgility();
    }

    /**
     * {@inheritDoc}
     */
    public function setWill($will)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWill', array($will));

        return parent::setWill($will);
    }

    /**
     * {@inheritDoc}
     */
    public function getWill()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWill', array());

        return parent::getWill();
    }

    /**
     * {@inheritDoc}
     */
    public function setHealth($health)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHealth', array($health));

        return parent::setHealth($health);
    }

    /**
     * {@inheritDoc}
     */
    public function getHealth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHealth', array());

        return parent::getHealth();
    }

    /**
     * {@inheritDoc}
     */
    public function setHitPoints($hitPoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHitPoints', array($hitPoints));

        return parent::setHitPoints($hitPoints);
    }

    /**
     * {@inheritDoc}
     */
    public function getHitPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHitPoints', array());

        return parent::getHitPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setManaPoints($manaPoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManaPoints', array($manaPoints));

        return parent::setManaPoints($manaPoints);
    }

    /**
     * {@inheritDoc}
     */
    public function getManaPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManaPoints', array());

        return parent::getManaPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setRagePoints($ragePoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRagePoints', array($ragePoints));

        return parent::setRagePoints($ragePoints);
    }

    /**
     * {@inheritDoc}
     */
    public function getRagePoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRagePoints', array());

        return parent::getRagePoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnergyPoints($energyPoints)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnergyPoints', array($energyPoints));

        return parent::setEnergyPoints($energyPoints);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnergyPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnergyPoints', array());

        return parent::getEnergyPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntellegence($intellegence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntellegence', array($intellegence));

        return parent::setIntellegence($intellegence);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntellegence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntellegence', array());

        return parent::getIntellegence();
    }

}
