<?php

namespace DoctrineProxies\__CG__\Amulet\Entity\Options;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DefStats extends \Amulet\Entity\Options\DefStats implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'phys_def', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'mag_def', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'block', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'parring', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'evasion', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'fire_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'wind_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'water_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'earth_resistance');
        }

        return array('__isInitialized__', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'id', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'phys_def', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'mag_def', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'block', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'parring', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'evasion', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'fire_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'wind_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'water_resistance', '' . "\0" . 'Amulet\\Entity\\Options\\DefStats' . "\0" . 'earth_resistance');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DefStats $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhysDef($physDef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhysDef', array($physDef));

        return parent::setPhysDef($physDef);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhysDef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhysDef', array());

        return parent::getPhysDef();
    }

    /**
     * {@inheritDoc}
     */
    public function setMagDef($magDef)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMagDef', array($magDef));

        return parent::setMagDef($magDef);
    }

    /**
     * {@inheritDoc}
     */
    public function getMagDef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMagDef', array());

        return parent::getMagDef();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlock($block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlock', array($block));

        return parent::setBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlock', array());

        return parent::getBlock();
    }

    /**
     * {@inheritDoc}
     */
    public function setParring($parring)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParring', array($parring));

        return parent::setParring($parring);
    }

    /**
     * {@inheritDoc}
     */
    public function getParring()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParring', array());

        return parent::getParring();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvasion($evasion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvasion', array($evasion));

        return parent::setEvasion($evasion);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvasion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvasion', array());

        return parent::getEvasion();
    }

    /**
     * {@inheritDoc}
     */
    public function setFireResistance($fireResistance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFireResistance', array($fireResistance));

        return parent::setFireResistance($fireResistance);
    }

    /**
     * {@inheritDoc}
     */
    public function getFireResistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFireResistance', array());

        return parent::getFireResistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setWindResistance($windResistance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWindResistance', array($windResistance));

        return parent::setWindResistance($windResistance);
    }

    /**
     * {@inheritDoc}
     */
    public function getWindResistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWindResistance', array());

        return parent::getWindResistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setWaterResistance($waterResistance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWaterResistance', array($waterResistance));

        return parent::setWaterResistance($waterResistance);
    }

    /**
     * {@inheritDoc}
     */
    public function getWaterResistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWaterResistance', array());

        return parent::getWaterResistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setEarthResistance($earthResistance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEarthResistance', array($earthResistance));

        return parent::setEarthResistance($earthResistance);
    }

    /**
     * {@inheritDoc}
     */
    public function getEarthResistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEarthResistance', array());

        return parent::getEarthResistance();
    }

}
